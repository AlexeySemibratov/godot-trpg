[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform float width: hint_range(0.0, 10.0);
uniform vec4 color: hint_color;

const vec2 dirs[] = { 
	vec2(1.0, 0.0), 
	vec2(-1.0, 0.0), 
	vec2(0.0, 1.0), 
	vec2(0.0, -1.0)
};

float max_alpha(vec2 uv, sampler2D sampler) {
	float alpha = 0.0;
	for (int i = 0; i < dirs.length(); i++) {
		float size = width * 1.0 / float(textureSize(sampler, 0).x);
		vec2 sUV = uv + size * dirs[i];
		alpha = max(alpha, texture(sampler, sUV).a);
	}
	return alpha;
}

void fragment() {
	vec4 current = texture(TEXTURE, UV);
	float a = current.a;
	vec4 result = mix(color, current, current.a);
	result.a = max_alpha(UV, TEXTURE);
	COLOR = result;
}"
